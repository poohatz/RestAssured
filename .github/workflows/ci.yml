name: Run Tests with JSON Server

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js for JSON Server
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Install JSON Server dependencies
      - name: Install JSON Server
        run: npm install json-server

      # Start JSON Server in background
      - name: Start JSON Server
        run: |
          npx json-server --watch src/test/resources/dbCopy.json --port 3000 &
          sleep 20 # Wait for the server to fully start
          curl http://localhost:3000/

      # Set up JDK 11 for tests
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # Cache Maven dependencies to speed up builds
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Install Maven dependencies
      - name: Install dependencies
        run: mvn install -DskipTests

      # Run tests with Maven (tests should use http://localhost:3000 for JSON Server)
      - name: Run tests
        run: mvn test

      - name: List files in target directory
        run: ls -la target

      - name: Generate Allure report
        run: mvn allure:report

      # Upload test results or artifacts if needed
      - name: Upload Allure results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: target/allure-results
